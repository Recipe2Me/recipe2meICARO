import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.entidadesBasicas.informes.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.interfaces.InterfazUsoAgente;
import icaro.infraestructura.entidadesBasicas.comunicacion.MensajeSimple;
import icaro.aplicaciones.agentes.AgenteAplicacionGestorDialogoCognitivo.objetivos.*;
import icaro.aplicaciones.agentes.AgenteAplicacionGestorDialogoCognitivo.tareas.*;
import icaro.aplicaciones.informacion.dominioRecipe2Me.*;
import icaro.aplicaciones.informacion.dominioRecipe2Me.eventos.*;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

rule "Creacion de los objectivos iniciales"
when 
	not(Focus())
then 
	TareaSincrona tarea = gestorTareas.crearTareaSincrona(InicializarInfoWorkMem.class);
    tarea.ejecutar();
	recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end

/////////////////////////////////////////////////////////////////////////////////////////////////
///Reglas de Focalizacion
rule "Focaliza el objetivo ObtenerInfoSesion"
  when
    obj:ObtenerInfoSesion();
    f:Focus(foco == null )
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end
//=======================================================================
///Reglas de Consecucion del Objetivo ObtenerInfoSesion
rule "Inicio del proceso de consecucion del  objetivo ObtenerInfoSesion"
  when
    obj:ObtenerInfoSesion(state==Objetivo.PENDING)
    evento:EventoConexion( name : user.username )
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
end

rule "Creacion de la sesion del usuario"
   when
    obj:ObtenerInfoSesion(state==Objetivo.SOLVING)
    evento:EventoConexion( name : user.username )
    f:Focus(foco == obj)
   then
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Se ejecuta la tarea : RegistrarDialogoUsuario",InfoTraza.NivelTraza.debug));
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RegistrarDialogoUsuario.class);
    tarea.ejecutar(evento);
    retract(evento);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Zanjar objetivo ObtenerInfoSesion"
   when
     obj:ObtenerInfoSesion(state==Objetivo.SOLVING)
     informe:InformeDeTarea(identTarea == "RegistrarDialogoUsuario")
     f:Focus(foco == obj)
   then
     obj.setSolved();
     update(obj);   
     retract(informe);
 end
 
 rule "Focaliza el objetivo ObtenerIngredientesFavoritos"
  when
    obj:ObtenerIngredientesFavoritos(state==Objetivo.PENDING)
    objA:ObtenerInfoSesion(state==Objetivo.SOLVED)
    f:Focus(foco == objA )
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end

rule "Inicio del proceso de obtencion de ingredientes favoritos"
  when
    obj:ObtenerIngredientesFavoritos(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
end

rule "Obtener ingredientes favoritos"
   when
    obj:ObtenerIngredientesFavoritos(state==Objetivo.SOLVING)
    evento:EventoMensajeDelUsuario()
    f:Focus(foco == obj)
   then
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Se ejecuta la tarea : RegistrarDialogoUsuario",InfoTraza.NivelTraza.debug));
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(TareaObtenerIngredientesFavoritos.class);
    tarea.ejecutar(evento);
    retract(evento);
end

rule "Zanjar objetivo ObtenerIngredientesFavoritos"
   when
     obj:ObtenerIngredientesFavoritos(state==Objetivo.SOLVING)
     informe:InformeDeTarea(identTarea == "TareaObtenerIngredientesFavoritos")
     f:Focus(foco == obj)
   then
     obj.setSolved();
     update(obj);   
     retract(informe);
 end

rule "Focalizo el objetivo ObtenerIngredientesOdiados"
  when
    obj:ObtenerIngredientesFavoritos(state==Objetivo.SOLVED)
    obj2:ObtenerIngredientesOdiados(state==Objetivo.PENDING)
    f:Focus(foco == obj)
  then
    f.setFoco(obj2);
    update(f);
end

rule "Inicio el proceso para resolver el objetivo ObtenerIngredientesOdiados"
  when
    obj:ObtenerIngredientesOdiados(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
end

rule "Obtener ingredientes odiados"
   when
    obj:ObtenerIngredientesOdiados(state==Objetivo.SOLVING)
    criterio:Criterio()
    evento:EventoMensajeDelUsuario()
    f:Focus(foco == obj)
   then
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Se ejecuta la tarea : RegistrarDialogoUsuario",InfoTraza.NivelTraza.debug));
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(TareaObtenerIngredientesOdiados.class);
    tarea.ejecutar(evento,criterio);
    retract(evento);

end

rule "Zanjar objetivo ObtenerIngredientesOdiados"
   when
     obj:ObtenerIngredientesOdiados(state==Objetivo.SOLVING)
     informe:InformeDeTarea(identTarea == "TareaObtenerIngredientesOdiados")
     f:Focus(foco == obj)
   then
     obj.setSolved();
     update(obj);   
     retract(informe);
 end
 
 rule "Reiniciar sistema tras desconexion"
  when
  	f:Focus()
  	obj1:ObtenerInfoSesion()
  	obj2:ObtenerIngredientesOdiados()
  	obj3:ObtenerIngredientesFavoritos()
  	criterio:Criterio()
    evento:EventoDesconexion()
  then
  	obj1.setPending();
  	update(obj1);
  	obj2.setPending();
  	update(obj2);
  	obj3.setPending();
  	update(obj3);
  	retract(criterio);
	retract(evento);
  	f.setFoco(obj1);
  	update(f); 
	recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end




