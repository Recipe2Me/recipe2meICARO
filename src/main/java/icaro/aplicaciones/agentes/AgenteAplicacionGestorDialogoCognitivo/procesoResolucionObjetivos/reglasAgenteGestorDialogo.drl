import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.entidadesBasicas.informes.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.interfaces.InterfazUsoAgente;
import icaro.infraestructura.entidadesBasicas.comunicacion.MensajeSimple;
import icaro.aplicaciones.agentes.AgenteAplicacionGestorDialogoCognitivo.objetivos.*;
import icaro.aplicaciones.agentes.AgenteAplicacionGestorDialogoCognitivo.tareas.*;
import icaro.aplicaciones.informacion.dominioRecipe2Me.*;
import icaro.aplicaciones.informacion.dominioRecipe2Me.eventos.*;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

rule "Creacion de los objectivos iniciales"
when 
	not(Focus())
then 
	TareaSincrona tarea = gestorTareas.crearTareaSincrona(InicializarInfoWorkMem.class);
    tarea.ejecutar();
	recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end
/////////////////////////////////////////////////////////////////////////////////////////////////
///Regla de reinicializacion del sistema
rule "Reiniciar sistema tras desconexion"
  when
    evento:EventoDesconexion()
  then
  	TareaSincrona tarea = gestorTareas.crearTareaSincrona(PeticionTerminacion.class);
    tarea.ejecutar();
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

/////////////////////////////////////////////////////////////////////////////////////////////////
///Reglas de Focalizacion
rule "Focaliza el objetivo ObtenerInfoSesion (Primer Objetivo siempre)"
  when
    obj:ObtenerInfoSesion();
    f:Focus(foco == null )
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end

rule "Focaliza el objetivo ObtenerIngredientesFavoritos (Segundo objetivo si es la primera vez que accede)"
  when
  	sesion:UserSession(first == true)
    obj:ObtenerIngredientesFavoritos(state==Objetivo.PENDING)
    objA:ObtenerInfoSesion(state==Objetivo.SOLVED)
    f:Focus(foco == objA )
  then
    f.setFoco(obj);
    update(f);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Focalizo el objetivo ObtenerIngredienteOPlato (Segundo objetivo si no es la primera vez que accede)"
  when
  	sesion:UserSession(first == false)
    obj:ObtenerIngredienteOPlato(state==Objetivo.PENDING)
    objA:ObtenerInfoSesion(state==Objetivo.SOLVED)
    f:Focus(foco == objA)
  then
    f.setFoco(obj);
    update(f);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Focalizo el objetivo ObtenerIngredientesOdiados"
  when
    obj:ObtenerIngredientesOdiados(state==Objetivo.PENDING)
    objA:ObtenerIngredientesFavoritos(state==Objetivo.SOLVED)
    f:Focus(foco == objA)
  then
    f.setFoco(obj);
    update(f);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
 
rule "Focalizo el objetivo ObtenerAlergia"
  when
    obj:ObtenerAlergia(state==Objetivo.PENDING)
    objA:ObtenerIngredientesOdiados(state==Objetivo.SOLVED)
    f:Focus(foco == objA)
  then
    f.setFoco(obj);
    update(f);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
 
rule "Focalizo el objetivo ObtenerNivelCocina"
  when
    obj:ObtenerNivelCocina(state==Objetivo.PENDING)
    objA:ObtenerAlergia(state==Objetivo.SOLVED)
    f:Focus(foco == objA)
  then
    f.setFoco(obj);
    update(f);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
 
rule "Focalizo el objetivo ObtenerValoracionUsuario"
  when
    obj:ObtenerValoracionUsuario(state==Objetivo.PENDING)
    objA:ObtenerIngredienteOPlato(state==Objetivo.SOLVED)
    f:Focus(foco == objA)
  then
    f.setFoco(obj);
    update(f);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
//=======================================================================
///Reglas de Consecucion del Objetivo ObtenerInfoSesion
rule "Inicio del proceso de consecucion del  objetivo ObtenerInfoSesion"
  when
    obj:ObtenerInfoSesion(state==Objetivo.PENDING)
    evento:EventoConexion( name : user.username )
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Creacion de la sesion del usuario"
  when
    obj:ObtenerInfoSesion(state==Objetivo.SOLVING)
    evento:EventoConexion( name : user.username )
    f:Focus(foco == obj)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RegistrarDialogoUsuario.class);
    tarea.ejecutar(evento);
    retract(evento);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
end

rule "Zanjar objetivo ObtenerInfoSesion"
  when
    obj:ObtenerInfoSesion(state==Objetivo.SOLVING)
    informe:InformeDeTarea(identTarea == "RegistrarDialogoUsuario")
    f:Focus(foco == obj)
  then
    obj.setSolved();
    update(obj);   
    retract(informe);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Inicio del proceso de obtencion de ingredientes favoritos"
  when
    obj:ObtenerIngredientesFavoritos(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Obtener ingredientes favoritos"
  when
    obj:ObtenerIngredientesFavoritos(state==Objetivo.SOLVING)
    evento:EventoMensajeDelUsuario()
    f:Focus(foco == obj)
    dialogo:DialogoInicial()
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(TareaObtenerIngredientesFavoritos.class);
    tarea.ejecutar(evento,dialogo);
    retract(evento);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
end

rule "Zanjar objetivo ObtenerIngredientesFavoritos"
  when
    obj:ObtenerIngredientesFavoritos(state==Objetivo.SOLVING)
    informe:InformeDeTarea(identTarea == "TareaObtenerIngredientesFavoritos")
    f:Focus(foco == obj)
  then
    obj.setSolved();
    update(obj);   
    retract(informe);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Inicio el proceso para resolver el objetivo ObtenerIngredientesOdiados"
  when
    obj:ObtenerIngredientesOdiados(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Obtener ingredientes odiados"
  when
    obj:ObtenerIngredientesOdiados(state==Objetivo.SOLVING)
    evento:EventoMensajeDelUsuario()
    f:Focus(foco == obj)
    dialogo:DialogoInicial()
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(TareaObtenerIngredientesOdiados.class);
    tarea.ejecutar(evento,dialogo);
    retract(evento);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
end

rule "Zanjar objetivo ObtenerIngredientesOdiados"
  when
    obj:ObtenerIngredientesOdiados(state==Objetivo.SOLVING)
    informe:InformeDeTarea(identTarea == "TareaObtenerIngredientesOdiados")
    f:Focus(foco == obj)
  then
    obj.setSolved();
    update(obj);   
    retract(informe);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
 
rule "Inicio el proceso para resolver el objetivo ObtenerAlergia"
  when
    obj:ObtenerAlergia(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Obtener alergias"
  when
    obj:ObtenerAlergia(state==Objetivo.SOLVING)
    evento:EventoMensajeDelUsuario()
    f:Focus(foco == obj)
    dialogo:DialogoInicial()
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(TareaObtenerAlergia.class);
    tarea.ejecutar(evento,dialogo);
    retract(evento);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
end

rule "Zanjar objetivo ObtenerAlergia"
  when
    obj:ObtenerAlergia(state==Objetivo.SOLVING)
    informe:InformeDeTarea(identTarea == "TareaObtenerAlergia")
    f:Focus(foco == obj)
  then
    obj.setSolved();
    update(obj);   
    retract(informe);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
 
rule "Inicio el proceso para resolver el objetivo ObtenerNivelCocina"
  when
    obj:ObtenerNivelCocina(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Obtener NivelCocina"
  when
    obj:ObtenerNivelCocina(state==Objetivo.SOLVING)
    evento:EventoMensajeDelUsuario()
    f:Focus(foco == obj)
    dialogo:DialogoInicial()
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(TareaObtenerNivelCocina.class);
    tarea.ejecutar(evento,dialogo);
    retract(evento);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
end

rule "Zanjar objetivo ObtenerNivelCocina"
  when
    obj:ObtenerNivelCocina(state==Objetivo.SOLVING)
    informe:InformeDeTarea(identTarea == "TareaObtenerNivelCocina")
    f:Focus(foco == obj)
  then
    obj.setSolved();
    update(obj);   
    retract(informe);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
 
rule "Inicio el proceso para resolver el objetivo ObtenerIngredienteOPlato"
  when
    obj:ObtenerIngredienteOPlato(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Obtener IngredienteOPlato"
  when
    obj:ObtenerIngredienteOPlato(state==Objetivo.SOLVING)
    evento:EventoMensajeDelUsuario()
    f:Focus(foco == obj)
    consulta:QueryRecipe()
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(TareaObtenerIngredienteOPlato.class);
    tarea.ejecutar(evento,consulta);
    retract(evento);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
end

rule "Zanjar objetivo ObtenerIngredienteOPlato"
  when
    obj:ObtenerIngredienteOPlato(state==Objetivo.SOLVING)
    informe:InformeDeTarea(identTarea == "TareaObtenerIngredienteOPlato")
    f:Focus(foco == obj)
  then
    obj.setSolved();
    update(obj);   
    retract(informe);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
